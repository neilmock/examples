#silent true;;
#use "topfind";;
#thread;;
#camlp4o;;
#require "core";;
#require "core.top";;
#require "ppx_jane";;
#silent false;;
open Core_kernel;;
[@@@part "1"];;
type t = { foo: int; bar: float } ;;
[%%expect ocaml {|type t = { foo : int; bar : float; }|}];;
let sexp_of_t t =
  let a x = Sexp.Atom x and l x = Sexp.List x in
  l [ l [a "foo"; Int.sexp_of_t t.foo  ];
      l [a "bar"; Float.sexp_of_t t.bar]; ] ;;
[%%expect ocaml {|val sexp_of_t : t -> Sexp.t = <fun>|}];;
sexp_of_t { foo = 3; bar = -5.5 } ;;
[%%expect ocaml {|- : Sexp.t = ((foo 3) (bar -5.5))|}];;
